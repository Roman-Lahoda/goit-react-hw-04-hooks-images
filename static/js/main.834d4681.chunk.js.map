{"version":3,"sources":["component/Button/Button.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Searchbar/Searchbar.js","services/imageApi.js","component/Modal/Modal.js","App.js","index.js"],"names":["Button","text","func","type","onClick","className","ImageGalleryItem","obj","imgClick","src","webformatURL","alt","tags","ImageGallery","arrayImages","map","item","id","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","alert","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","axios","defaults","baseURL","api","fetchImage","currentPage","get","then","data","hits","Modal","children","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","target","App","setArrayImages","setCurrentPage","isLoading","setIsloading","modalOpen","setModalOpen","currentImg","setCurrentImg","array","length","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","toggleModal","onModal","color","height","width","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.834d4681.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ text, func }) => {\r\n  return (\r\n    <button type=\"buttton\" onClick={func} className=\"Button\">\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  func: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ obj, imgClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={obj.webformatURL}\r\n        alt={obj.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => {\r\n          imgClick(obj);\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  obj: PropTypes.object,\r\n  imgClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ arrayImages, imgClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {arrayImages.map((item) => {\r\n        return (\r\n          <ImageGalleryItem key={item.id} obj={item} imgClick={imgClick} />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  arrayImages: PropTypes.array,\r\n  imgClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const onInput = (e) => {\r\n    setSearchQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return alert(\"Please, enter search query\");\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={onInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import axios from \"axios\";\r\nconst API_KEY = \"23036089-03f6791326ef951aa675b45d4\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\r\n\r\nconst fetchImage = (searchQuery, currentPage) => {\r\n  return axios\r\n    .get(\r\n      `/?key=${API_KEY}&q=${searchQuery}\r\n    &page=${\r\n      currentPage + 1\r\n    }&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then(({ data }) => data.hits);\r\n};\r\n\r\nconst api = {\r\n  fetchImage,\r\n};\r\n\r\nexport default api;\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Modal({ children, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onBackdropClose = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onBackdropClose}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  obj: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Button from \"./component/Button/Button\";\nimport ImageGallery from \"./component/ImageGallery\";\nimport Searchbar from \"./component/Searchbar\";\nimport api from \"./services/imageApi\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./component/Modal/Modal\";\n\nexport default function App() {\n  const [arrayImages, setArrayImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [isLoading, setIsloading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentImg, setCurrentImg] = useState(\"\");\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchImage();\n  }, [searchQuery]);\n\n  const onSubmit = (text) => {\n    setSearchQuery(text);\n    setArrayImages([]);\n    setCurrentPage(0);\n  };\n\n  const fetchImage = () => {\n    setIsloading(true);\n    api\n      .fetchImage(searchQuery, currentPage)\n      .then((array) => {\n        if (array.length === 0) {\n          return alert(\"Sorry, we didn't find pictures.Try again\");\n        }\n        setArrayImages((prevState) => [...prevState, ...array]);\n        setCurrentPage((prevState) => prevState + 1);\n      })\n      .then(() => {\n        if (currentPage > 0) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch(() => {\n        alert(\"Something went wrong. Please try again later\");\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  };\n\n  const toggleModal = () => {\n    setModalOpen((prevState) => {\n      return !prevState;\n    });\n  };\n\n  const onModal = (obj) => {\n    setCurrentImg(obj);\n    toggleModal();\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onSubmit} />\n      {arrayImages.length > 0 && (\n        <>\n          <ImageGallery\n            arrayImages={arrayImages}\n            onClick={onModal}\n            imgClick={onModal}\n          />\n          <Button text={\"Load more\"} func={fetchImage} />\n        </>\n      )}\n      {isLoading && (\n        <Loader\n          className=\"Loader\"\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      )}\n      {modalOpen && (\n        <Modal obj={currentImg} onClose={toggleModal}>\n          <img src={currentImg.largeImageURL} alt={currentImg.tags} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}